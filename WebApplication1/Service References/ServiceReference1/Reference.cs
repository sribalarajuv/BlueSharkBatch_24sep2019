//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/WebApplication1.Models")]
    [System.SerializableAttribute()]
    public partial class Employee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmpSalaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmpidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpName {
            get {
                return this.EmpNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpNameField, value) != true)) {
                    this.EmpNameField = value;
                    this.RaisePropertyChanged("EmpName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmpSalary {
            get {
                return this.EmpSalaryField;
            }
            set {
                if ((this.EmpSalaryField.Equals(value) != true)) {
                    this.EmpSalaryField = value;
                    this.RaisePropertyChanged("EmpSalary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Empid {
            get {
                return this.EmpidField;
            }
            set {
                if ((this.EmpidField.Equals(value) != true)) {
                    this.EmpidField = value;
                    this.RaisePropertyChanged("Empid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IAddWcfService")]
    public interface IAddWcfService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddWcfService/DoWork", ReplyAction="http://tempuri.org/IAddWcfService/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddWcfService/DoWork", ReplyAction="http://tempuri.org/IAddWcfService/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddWcfService/Add", ReplyAction="http://tempuri.org/IAddWcfService/AddResponse")]
        int Add(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddWcfService/Add", ReplyAction="http://tempuri.org/IAddWcfService/AddResponse")]
        System.Threading.Tasks.Task<int> AddAsync(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddWcfService/GetData", ReplyAction="http://tempuri.org/IAddWcfService/GetDataResponse")]
        WebApplication1.ServiceReference1.Employee[] GetData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddWcfService/GetData", ReplyAction="http://tempuri.org/IAddWcfService/GetDataResponse")]
        System.Threading.Tasks.Task<WebApplication1.ServiceReference1.Employee[]> GetDataAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAddWcfServiceChannel : WebApplication1.ServiceReference1.IAddWcfService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddWcfServiceClient : System.ServiceModel.ClientBase<WebApplication1.ServiceReference1.IAddWcfService>, WebApplication1.ServiceReference1.IAddWcfService {
        
        public AddWcfServiceClient() {
        }
        
        public AddWcfServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AddWcfServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AddWcfServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AddWcfServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public int Add(int a, int b) {
            return base.Channel.Add(a, b);
        }
        
        public System.Threading.Tasks.Task<int> AddAsync(int a, int b) {
            return base.Channel.AddAsync(a, b);
        }
        
        public WebApplication1.ServiceReference1.Employee[] GetData() {
            return base.Channel.GetData();
        }
        
        public System.Threading.Tasks.Task<WebApplication1.ServiceReference1.Employee[]> GetDataAsync() {
            return base.Channel.GetDataAsync();
        }
    }
}
